

use nalgebra::{ArrayStorage, DMatrix, SMatrix, SVectorSlice};

use crate::spectra::SpectralData;
use crate::util::Domain;
use crate::util::{WavelengthStep, Step, NM5};
use crate::util::sprague_cols;

use crate::ALL;

#[derive(Debug, Default)]
pub struct HP<const I:usize>;

impl<const I:usize> SpectralData for HP<I> {
    type StepType = WavelengthStep;

    fn values<L>(&self, domain: &Domain<L>) -> DMatrix<f64>
	where
		L: Step,
		<Self::StepType as Step>::UnitValueType: From<<L>::UnitValueType> 
	{
		match I {
			ALL => {
				let data = SMatrix::from_data(ArrayStorage(HP_DATA));
				sprague_cols(&self.domain(), &domain, &data)
			}
			i@1..=N_CIE => {
				let data = SVectorSlice::<f64, N_CIE>::from_slice(&HP_DATA[i-1]);
				sprague_cols(&self.domain(), &domain, &data)
			}
			_ => panic!("Illegal Index in CIE HP Illuminant")
		}
    }

    fn domain(&self) -> crate::util::domain::Domain<Self::StepType> {
        Domain::new(380/5, 780/5, NM5)
    }

	fn description(&self) -> Option<String> {
		Some("CIE HP Standard Illuminants".to_string())
	}
}

const N_CIE: usize = 5;
static HP_DATA: [[f64;81];N_CIE] = [
	[1.90, 2.20, 2.50, 2.70, 3.10, 4.30, 3.80, 4.20, 4.80, 5.19, 5.89, 7.39, 7.89, 5.69, 12.89, 6.69, 4.30, 20.78,
	12.99, 6.69, 1.40, 1.50, 3.20, 18.18, 56.24, 2.90, 2.10, 13.39, 2.10, 2.00, 2.20, 2.30, 2.60, 5.10, 11.39, 15.48,
	20.78, 55.64, 254.03, 56.14, 111.78, 297.98, 142.55, 334.84, 189.40, 117.78, 79.92, 108.09, 46.85, 38.16, 32.47,
	28.37, 25.37, 22.98, 20.38, 19.78, 17.78, 16.78, 19.18, 17.98, 13.69, 9.99, 8.19, 7.59, 6.99, 6.79, 6.49, 6.39,
	6.09, 5.99, 5.79, 5.79, 5.79, 5.79, 6.39, 5.99, 5.59, 31.97, 27.87, 5.89, 6.69],
	[2.64, 2.77, 3.42, 3.68, 4.33, 5.50, 5.94, 7.20, 9.02, 10.27, 12.48, 16.82, 16.04, 15.26, 22.58, 20.07, 15.13,
	25.27, 28.04, 15.99, 10.40, 11.10, 13.44, 22.62, 49.71, 17.21, 17.12, 27.26, 20.02, 21.54, 23.36, 25.66, 29.69,
	43.12, 98.30, 125.60, 134.57, 149.70, 166.12, 98.77, 30.47, 1.17, 0.39, 1.65, 21.41, 76.11, 126.16, 161.96, 160.06,
	158.19, 153.69, 147.40, 140.60, 134.92, 127.59, 124.65, 118.02, 113.94, 118.10, 115.16, 102.85, 90.54, 83.34, 79.44,
	76.97, 74.85, 73.12, 71.51, 70.13, 69.04, 67.48, 66.70, 66.31, 65.14, 65.70, 64.79, 64.10, 83.04, 86.25, 63.93,
	64.92],
	[3.15, 7.49, 10.87, 12.57, 12.97, 21.29, 26.29, 30.18, 43.06, 29.58, 23.18, 35.28, 26.29, 24.29, 22.91, 26.20,
	29.31, 25.30, 28.14, 24.05, 21.82, 20.51, 23.05, 26.98, 30.96, 30.72, 27.13, 29.55, 34.22, 29.98, 41.21, 173.14,
	141.37, 64.98, 33.83, 34.26, 33.32, 52.80, 74.29, 47.97, 49.20, 96.07, 85.41, 175.18, 153.73, 120.22, 98.90, 90.22,
	70.07, 66.84, 57.61, 53.03, 49.85, 48.16, 42.76, 50.64, 48.42, 41.27, 43.44, 40.48, 35.16, 34.94, 24.68, 24.70,
	21.49, 19.49, 18.48, 17.55, 17.36, 17.09, 16.32, 16.07, 16.58, 15.78, 17.66, 20.46, 16.59, 17.81, 16.07, 14.83,
	14.61],
	[9.80, 13.30, 19.97, 25.81, 24.69, 47.66, 54.44, 63.82, 85.52, 60.54, 38.37, 88.20, 44.94, 35.64, 30.75, 33.77,
	40.81, 33.77, 35.28, 32.55, 29.44, 26.16, 29.96, 32.83, 33.58, 41.16, 32.93, 32.13, 34.45, 30.12, 41.13, 187.10,
	101.37, 123.96, 42.47, 34.73, 31.82, 54.67, 57.45, 70.43, 69.50, 49.37, 183.35, 162.15, 109.35, 72.38, 70.60, 58.08,
	44.13, 50.20, 40.80, 37.91, 36.71, 38.30, 31.24, 35.31, 45.62, 35.82, 89.91, 36.01, 32.57, 39.26, 23.27, 25.30,
	20.02, 17.54, 16.25, 15.20, 15.15, 15.22, 14.26, 12.63, 14.75, 13.19, 17.63, 23.38, 16.02, 24.46, 22.05, 16.11,
	12.91],
	[0.34, 7.11, 11.49, 14.97, 14.95, 29.14, 38.08, 51.56, 62.56, 55.61, 41.98, 50.02, 42.14, 39.04, 40.52, 45.29,
	51.01, 49.18, 49.05, 46.12, 45.73, 39.46, 44.39, 46.14, 49.54, 59.76, 48.47, 48.38, 48.70, 44.25, 54.42, 128.93,
	81.26, 67.36, 48.48, 51.41, 48.88, 68.52, 80.85, 65.96, 59.43, 67.57, 128.34, 131.85, 101.70, 77.05, 66.27, 77.09,
	60.51, 65.23, 57.86, 56.20, 54.32, 56.34, 45.74, 50.79, 56.66, 51.99, 84.31, 47.48, 47.46, 61.78, 34.51, 38.74,
	30.98, 25.45, 22.88, 20.82, 21.05, 20.81, 18.69, 17.54, 19.58, 16.42, 23.77, 35.39, 21.37, 34.58, 30.21, 19.71,
	15.61],
];