use nalgebra::{Matrix3xX};
use crate::spectra::{SpectralDomain, StandardObserver};


/**
	Matrix representation of the tri-chromatic response curves for various standard observers.

	There response curves are called color matching functions. These were derived from color matching experiments, and
	form the basis of colorimetry. The color matching function vectors are here stored as row vectors, with the matrix 
	having 3 rows, and a varying number of columns, depending on the number of wavelength samples. This opposed to how
	spectral data, which is stored as column vectors. This allows to get tristimulus values by performing a straight
	forward matrix multiplication between the color matching function matrix and the spectral data matrix.
 */
#[derive(Debug)]
pub struct Observer {
	pub cmf : Matrix3xX<f64>,

	/// Low value of wavelength domain, in wavelength units.
	pub low: usize,  

	/// Size of a unit wavelength value, in Angstrom
	pub unit: usize,

}

impl Observer {
    pub fn new(low: usize, unit: usize, data: Vec<f64>) -> Self { 
		Self { cmf: Matrix3xX::<f64>::from_vec(data), low, unit } 
	}

	pub fn domain(&self) -> SpectralDomain {
		SpectralDomain { low: self.low, unit: self.unit, size: self.cmf.ncols()}
	}
}

impl StandardObserver for Observer {}


/**
	CIE1931 2ยบ standard observer (from )
 */
pub fn cie1931() -> Observer {
	let data = vec![
		0.0001299, 0.000003917, 0.0006061, 0.0002321, 0.000006965, 0.001086, 0.0004149, 0.00001239, 0.001946,
		0.0007416, 0.00002202, 0.003486, 0.001368, 0.000039, 0.006450001, 0.002236, 0.000064, 0.01054999,
		0.004243, 0.00012, 0.02005001, 0.00765, 0.000217, 0.03621, 0.01431, 0.000396, 0.06785001,
		0.02319, 0.00064, 0.1102, 0.04351, 0.00121, 0.2074, 0.07763, 0.00218, 0.3713,
		0.13438, 0.004, 0.6456, 0.21477, 0.0073, 1.0390501, 0.2839, 0.0116, 1.3856,
		0.3285, 0.01684, 1.62296, 0.34828, 0.023, 1.74706, 0.34806, 0.0298, 1.7826,
		0.3362, 0.038, 1.77211, 0.3187, 0.048, 1.7441, 0.2908, 0.06, 1.6692,
		0.2511, 0.0739, 1.5281, 0.19536, 0.09098, 1.28764, 0.1421, 0.1126, 1.0419,
		0.09564, 0.13902, 0.8129501, 0.05795001, 0.1693, 0.6162, 0.03201, 0.20802, 0.46518,
		0.0147, 0.2586, 0.3533, 0.0049, 0.323, 0.272, 0.0024, 0.4073, 0.2123,
		0.0093, 0.503, 0.1582, 0.0291, 0.6082, 0.1117, 0.06327, 0.71, 0.07824999,
		0.1096, 0.7932, 0.05725001, 0.1655, 0.862, 0.04216, 0.2257499, 0.9148501, 0.02984,
		0.2904, 0.954, 0.0203, 0.3597, 0.9803, 0.0134, 0.4334499, 0.9949501, 0.008749999,
		0.5120501, 1.0, 0.005749999, 0.5945, 0.995, 0.0039, 0.6784, 0.9786, 0.002749999,
		0.7621, 0.952, 0.0021, 0.8425, 0.9154, 0.0018, 0.9163, 0.87, 0.001650001,
		0.9786, 0.8163, 0.0014, 1.0263, 0.757, 0.0011, 1.0567, 0.6949, 0.001,
		1.0622, 0.631, 0.0008, 1.0456, 0.5668, 0.0006, 1.0026, 0.503, 0.00034,
		0.9384, 0.4412, 0.00024, 0.8544499, 0.381, 0.00019, 0.7514, 0.321, 0.0001,
		0.6424, 0.265, 5E-05, 0.5419, 0.217, 0.00003, 0.4479, 0.175, 0.00002,
		0.3608, 0.1382, 0.00001, 0.2835, 0.107, 0.0, 0.2187, 0.0816, 0.0,
		0.1649, 0.061, 0.0, 0.1212, 0.04458, 0.0, 0.0874, 0.032, 0.0,
		0.0636, 0.0232, 0.0, 0.04677, 0.017, 0.0, 0.0329, 0.01192, 0.0,
		0.0227, 0.00821, 0.0, 0.01584, 0.005723, 0.0, 0.01135916, 0.004102, 0.0,
		0.008110916, 0.002929, 0.0, 0.005790346, 0.002091, 0.0, 0.004109457, 0.001484, 0.0,
		0.002899327, 0.001047, 0.0, 0.00204919, 0.00074, 0.0, 0.001439971, 0.00052, 0.0,
		0.000999949, 0.0003611, 0.0, 0.000690079, 0.0002492, 0.0, 0.000476021, 0.0001719, 0.0,
		0.000332301, 0.00012, 0.0, 0.000234826, 0.0000848, 0.0, 0.000166151, 0.00006, 0.0,
		0.000117413, 0.0000424, 0.0, 8.30753E-05, 0.00003, 0.0, 5.87065E-05, 0.0000212, 0.0,
		4.15099E-05, 0.00001499, 0.0, 2.93533E-05, 0.0000106, 0.0, 2.06738E-05, 7.4657E-06, 0.0,
		1.45598E-05, 5.2578E-06, 0.0, 1.0254E-05, 3.7029E-06, 0.0, 7.22146E-06, 2.6078E-06, 0.0,
		5.08587E-06, 1.8366E-06, 0.0, 3.58165E-06, 1.2934E-06, 0.0, 2.52253E-06, 9.1093E-07, 0.0,
		1.77651E-06, 6.4153E-07, 0.0, 1.25114E-06, 4.5181E-07, 0.0
	];
	Observer::new(360/5, 50, data)
}

/**
	CIE1964 10ยบ standard observer (data from [Coulour & Vision Research Laboratory UK](http://www.cvrl.org/cmfs.htm])
 */
pub fn cie1964() -> Observer {
	let data = vec![
		1.222E-07, 1.3398E-08, 5.35027E-07, 9.1927E-07, 1.0065E-07, 4.0283E-06, 5.9586E-06, 6.511E-07, 2.61437E-05,
		0.000033266, 0.000003625, 0.00014622, 0.000159952, 0.000017364, 0.000704776, 0.00066244, 0.00007156, 0.0029278,
		0.0023616, 0.0002534, 0.0104822, 0.0072423, 0.0007685, 0.032344, 0.0191097, 0.0020044, 0.0860109,
		0.0434, 0.004509, 0.19712, 0.084736, 0.008756, 0.389366, 0.140638, 0.014456, 0.65676,
		0.204492, 0.021391, 0.972542, 0.264737, 0.029497, 1.2825, 0.314679, 0.038676, 1.55348,
		0.357719, 0.049602, 1.7985, 0.383734, 0.062077, 1.96728, 0.386726, 0.074704, 2.0273,
		0.370702, 0.089456, 1.9948, 0.342957, 0.106256, 1.9007, 0.302273, 0.128201, 1.74537,
		0.254085, 0.152761, 1.5549, 0.195618, 0.18519, 1.31756, 0.132349, 0.21994, 1.0302,
		0.080507, 0.253589, 0.772125, 0.041072, 0.297665, 0.57006, 0.016172, 0.339133, 0.415254,
		0.005132, 0.395379, 0.302356, 0.003816, 0.460777, 0.218502, 0.015444, 0.53136, 0.159249,
		0.037465, 0.606741, 0.112044, 0.071358, 0.68566, 0.082248, 0.117749, 0.761757, 0.060709,
		0.172953, 0.82333, 0.04305, 0.236491, 0.875211, 0.030451, 0.304213, 0.92381, 0.020584,
		0.376772, 0.961988, 0.013676, 0.451584, 0.9822, 0.007918, 0.529826, 0.991761, 0.003988,
		0.616053, 0.99911, 0.001091, 0.705224, 0.99734, 0.0, 0.793832, 0.98238, 0.0,
		0.878655, 0.955552, 0.0, 0.951162, 0.915175, 0.0, 1.01416, 0.868934, 0.0,
		1.0743, 0.825623, 0.0, 1.11852, 0.777405, 0.0, 1.1343, 0.720353, 0.0,
		1.12399, 0.658341, 0.0, 1.0891, 0.593878, 0.0, 1.03048, 0.527963, 0.0,
		0.95074, 0.461834, 0.0, 0.856297, 0.398057, 0.0, 0.75493, 0.339554, 0.0,
		0.647467, 0.283493, 0.0, 0.53511, 0.228254, 0.0, 0.431567, 0.179828, 0.0,
		0.34369, 0.140211, 0.0, 0.268329, 0.107633, 0.0, 0.2043, 0.081187, 0.0,
		0.152568, 0.060281, 0.0, 0.11221, 0.044096, 0.0, 0.0812606, 0.0318004, 0.0,
		0.05793, 0.0226017, 0.0, 0.0408508, 0.0159051, 0.0, 0.028623, 0.0111303, 0.0,
		0.0199413, 0.0077488, 0.0, 0.013842, 0.0053751, 0.0, 0.00957688, 0.00371774, 0.0,
		0.0066052, 0.00256456, 0.0, 0.00455263, 0.00176847, 0.0, 0.0031447, 0.00122239, 0.0,
		0.00217496, 0.00084619, 0.0, 0.0015057, 0.00058644, 0.0, 0.00104476, 0.00040741, 0.0,
		0.00072745, 0.000284041, 0.0, 0.000508258, 0.00019873, 0.0, 0.00035638, 0.00013955, 0.0,
		0.000250969, 0.000098428, 0.0, 0.00017773, 0.000069819, 0.0, 0.00012639, 0.000049737, 0.0,
		0.000090151, 3.55405E-05, 0.0, 6.45258E-05, 0.000025486, 0.0, 0.000046339, 1.83384E-05, 0.0,
		3.34117E-05, 0.000013249, 0.0, 0.000024209, 9.6196E-06, 0.0, 1.76115E-05, 7.0128E-06, 0.0,
		0.000012855, 5.1298E-06, 0.0, 9.41363E-06, 3.76473E-06, 0.0, 0.000006913, 2.77081E-06, 0.0,
		5.09347E-06, 2.04613E-06, 0.0, 3.7671E-06, 1.51677E-06, 0.0, 2.79531E-06, 1.12809E-06, 0.0,
		0.000002082, 8.4216E-07, 0.0, 1.55314E-06, 6.297E-07, 0.0
	];
	Observer::new(360/5, 50, data)
}

#[test]
 fn testcie1931(){
	 println!("{:?}", cie1964());
 }
